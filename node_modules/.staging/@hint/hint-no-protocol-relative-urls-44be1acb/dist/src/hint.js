"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const category_1 = require("hint/dist/src/lib/enums/category");
const debug_1 = require("hint/dist/src/lib/utils/debug");
const cut_string_1 = require("hint/dist/src/lib/utils/misc/cut-string");
const hintscope_1 = require("hint/dist/src/lib/enums/hintscope");
const debug = debug_1.debug(__filename);
class NoProtocolRelativeUrlsHint {
    constructor(context) {
        const validate = async ({ element, resource }) => {
            if (debug.enabled) {
                const html = await element.outerHTML();
                debug(`Analyzing link\n${cut_string_1.default(html, 50)}`);
            }
            const url = (element.getAttribute('src') || element.getAttribute('href') || '').trim();
            if (url.startsWith('//')) {
                debug('Protocol relative URL found');
                const message = `'${url}' should not be specified as a protocol-relative URL.`;
                await context.report(resource, message, { content: url, element });
            }
        };
        context.on('element::a', validate);
        context.on('element::link', validate);
        context.on('element::script', validate);
    }
}
NoProtocolRelativeUrlsHint.meta = {
    docs: {
        category: category_1.Category.security,
        description: 'Disallow protocol relative URLs'
    },
    id: 'no-protocol-relative-urls',
    schema: [],
    scope: hintscope_1.HintScope.any
};
exports.default = NoProtocolRelativeUrlsHint;
